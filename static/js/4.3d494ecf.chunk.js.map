{"version":3,"sources":["assets/img/icons/edit.svg","assets/img/icons/camera.svg","components/Profile/MyProfile/components/EditButton.jsx","components/Profile/MyProfile/components/PhotoChange.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/MyProfile/ProfileEdit.jsx","components/Profile/MyProfileContainer.jsx"],"names":["module","exports","EditButton","props","className","s","profileEditBtn","onClick","activateProfileEdit","profileEditIcon","style","backgroundImage","editIcon","PhotoChange","photoChangeWrap","photoChange","photoChange__info","photoChange__infoIcon","camera","htmlFor","photoChange__label","photoChange__changeLink","name","id","photoChange__input","type","onChange","e","target","files","length","savePhoto","MyProfile","profile","constructor","Object","keys","Preloader","cn","profileWrap","profileInfoWrap","Photo","photos","profileInfo","Name","fullName","ProfileStatus","edit","status","updateStatus","aboutMe","AboutMe","profileColumnsWrap","ProfileSidebar","lookingForAJob","lookingForAJobDescription","contacts","MyPostsContainer","ProfileInfoReduxForm","reduxForm","form","userProfile","onSubmit","handleSubmit","Field","component","Input","validate","required","Textarea","map","key","error","styles","summaryError","ProfileEdit","isUpdateProfile","initialValues","values","saveProfile","then","deactivateProfileEdit","compose","connect","state","profilePage","isAuth","auth","getUserProfile","getStatus","withRouter","useState","isProfileEdit","setIsProfileEdit","authUserProfile","useContext","AuthUserProfileContext","useEffect","userId","history","push","isOwner","match","params"],"mappings":"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","file":"static/js/4.3d494ecf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.e720936c.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.37d0ba10.svg\";","import React from 'react'\r\n\r\nimport s from \"../../Profile.module.scss\";\r\nimport editIcon from \"../../../../assets/img/icons/edit.svg\";\r\n\r\nconst EditButton = (props) => {\r\n    return (\r\n        <button className={s.profileEditBtn} onClick={props.activateProfileEdit}>\r\n            <span className={s.profileEditIcon} style={{backgroundImage: `url(${editIcon})`}}></span>\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default EditButton;","import React from 'react'\r\n\r\nimport s from \"../../Profile.module.scss\";\r\nimport camera from \"../../../../assets/img/icons/camera.svg\";\r\n\r\nconst PhotoChange = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return <div className={s.photoChangeWrap}>\r\n        <div className={s.photoChange}>\r\n            <span className={s.photoChange__info}>\r\n                <span className={s.photoChange__infoIcon}\r\n                      style={{backgroundImage: `url(${camera})`}}></span>\r\n            </span>\r\n            <label htmlFor=\"custom-file-upload\" className={s.photoChange__label}>\r\n                <span className={s.photoChange__changeLink}>Change photo</span>\r\n                <input name=\"attachment-file\" id=\"custom-file-upload\" className={s.photoChange__input}\r\n                       type='file' onChange={onMainPhotoSelected}/>\r\n            </label>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default PhotoChange;","import React from 'react'\r\nimport s from '../Profile.module.scss'\r\nimport cn from 'classnames'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../common/Status/ProfileStatus\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\nimport EditButton from \"./components/EditButton\";\r\nimport PhotoChange from \"./components/PhotoChange\";\r\nimport Photo from \"../common/Photo/Photo\";\r\nimport Name from \"../common/Name/Name\";\r\nimport AboutMe from \"../common/AboutMe/AboutMe\";\r\nimport ProfileSidebar from \"../common/ProfileSidebar/ProfileSidebar\";\r\n\r\nconst MyProfile = (props) => {\r\n\r\n    if (props.profile.constructor === Object && Object.keys(props.profile).length === 0) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={cn('infoBlocksWrap', s.profileWrap)}>\r\n            <div className={cn('infoBlock', s.profileInfoWrap)}>\r\n                <Photo photos={props.profile.photos}>\r\n                    <PhotoChange savePhoto={props.savePhoto}/>\r\n                </Photo>\r\n\r\n                <div className={s.profileInfo}>\r\n\r\n                    <Name fullName={props.profile.fullName}/>\r\n\r\n                    <ProfileStatus edit={true} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                    {props.profile.aboutMe && <AboutMe aboutMe={props.profile.aboutMe}/>}\r\n                </div>\r\n\r\n                <EditButton activateProfileEdit={props.activateProfileEdit}/>\r\n            </div>\r\n\r\n            <div className={s.profileColumnsWrap}>\r\n                <ProfileSidebar lookingForAJob={props.profile.lookingForAJob}\r\n                                lookingForAJobDescription={props.profile.lookingForAJobDescription}\r\n                                contacts={props.profile.contacts}/>\r\n\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyProfile;","import React from 'react'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.scss\";\r\n\r\nconst ProfileEdit = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.saveProfile(values).then(() => {\r\n            props.deactivateProfileEdit();\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.isUpdateProfile && <Preloader/>}\r\n            <ProfileInfoReduxForm initialValues={props.userProfile} userProfile={props.userProfile}\r\n                                  onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    const contacts = props.userProfile.contacts;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                full Name: <span>\r\n                    <Field component={Input} name={'fullName'} validate={required} type=\"text\"/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                About Me:\r\n                <span>\r\n                    <Field component={Textarea} name={'aboutMe'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job:\r\n                <span>\r\n                    <Field component={Input} name={'lookingForAJob'} type=\"checkbox\"/>YES\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job Description:\r\n                <span>\r\n                    <Field component={Textarea} name={'lookingForAJobDescription'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts</b>:\r\n                {Object.keys(contacts).map(key => {\r\n                    return <div>\r\n                        {key}:\r\n                        <span>\r\n                            <Field component={Input} name={\"contacts.\" + key} type=\"text\"/>\r\n                        </span>\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <button>SAVE</button>\r\n\r\n            {props.error && <div className={styles.summaryError}>\r\n                {\r\n                    props.error\r\n                }\r\n            </div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileInfoReduxForm = reduxForm({\r\n    form: 'profileInfoForm'\r\n})(ProfileInfoForm);\r\n\r\nexport default ProfileEdit;","import React, {useState, useEffect, useContext} from 'react'\r\nimport MyProfile from \"./MyProfile/MyProfile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport ProfileEdit from \"./MyProfile/ProfileEdit\";\r\nimport {AuthUserProfileContext} from \"../../App\";\r\n\r\n\r\nconst MyProfileContainer = (props) => {\r\n    let [isProfileEdit, setIsProfileEdit] = useState(false);\r\n\r\n    const authUserProfile = useContext(AuthUserProfileContext);\r\n\r\n    useEffect(() => {\r\n        if (!authUserProfile.userId) {\r\n            props.history.push('/login')\r\n            //userId = 6268\r\n        }\r\n       // props.getStatus(authUserProfile.userId);\r\n        props.getUserProfile(authUserProfile.userId);\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const activateProfileEdit = (e) => {\r\n        setIsProfileEdit(true);\r\n    };\r\n    const deactivateProfileEdit = (e) => {\r\n        setIsProfileEdit(false);\r\n    };\r\n\r\n    if (!authUserProfile) return null;\r\n\r\n    return <>\r\n        {!isProfileEdit ?\r\n            <MyProfile activateProfileEdit={activateProfileEdit}\r\n                       deactivateProfileEdit={deactivateProfileEdit} profile={authUserProfile} {...props}\r\n                       isOwner={!props.match.params.userId}/>\r\n            :\r\n            <ProfileEdit saveProfile={props.saveProfile} deactivateProfileEdit={deactivateProfileEdit}\r\n                         userProfile={authUserProfile} isUpdateProfile={props.isUpdateProfile}/>\r\n        }\r\n    </>\r\n\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        isUpdateProfile: state.profilePage.isUpdateProfile\r\n    }\r\n);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(MyProfileContainer);"],"sourceRoot":""}