{"version":3,"sources":["assets/img/icons/edit.svg","assets/img/icons/camera.svg","components/Profile/ProfileInfo/ProfileInfoEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileInfoReduxForm","reduxForm","form","props","contacts","userProfile","onSubmit","handleSubmit","Field","component","Input","name","validate","required","type","Textarea","Object","keys","map","key","error","className","styles","summaryError","ProfileInfoEdit","Preloader","isUpdateProfile","initialValues","values","saveProfile","then","deactivateProfileEdit","ProfileInfo","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","s","infoWrap","cn","profileInfoBlockWrap","profileInfoBlock__title","profileInfoBlock__desc","Contacts","ProfileInfoContainer","useState","isProfileEdit","setIsProfileEdit","activateProfileEdit","e","profileWrap","profileInfoWrap","profilePhotoWrap","profilePhoto","src","photos","large","userPhoto","isOwner","photoChangeWrap","photoChange","photoChange__info","photoChange__infoIcon","style","backgroundImage","camera","htmlFor","photoChange__label","photoChange__changeLink","id","photoChange__input","onChange","target","files","length","savePhoto","profileInfo","profileFullName","ProfileStatusWithHooks","status","updateStatus","profileInfo__item","profileEditBtn","onClick","profileEditIcon","editIcon","profileColumnsWrap","MyPostsContainer","Profile","ProfileContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","connect","state","getUserProfileSelector","profilePage","getAuthUserId","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/4.d9aee0e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.e720936c.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.37d0ba10.svg\";","import React from 'react'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.scss\";\r\n\r\nconst ProfileInfoEdit = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.saveProfile(values).then(() => {\r\n            props.deactivateProfileEdit();\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.isUpdateProfile && <Preloader/>}\r\n            <ProfileInfoReduxForm initialValues={props.userProfile} userProfile={props.userProfile}\r\n                                  onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    const contacts = props.userProfile.contacts;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                full Name: <span>\r\n                    <Field component={Input} name={'fullName'} validate={required} type=\"text\"/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                About Me:\r\n                <span>\r\n                    <Field component={Textarea} name={'aboutMe'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job:\r\n                <span>\r\n                    <Field component={Input} name={'lookingForAJob'} type=\"checkbox\"/>YES\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job Description:\r\n                <span>\r\n                    <Field component={Textarea} name={'lookingForAJobDescription'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts</b>:\r\n                {Object.keys(contacts).map(key => {\r\n                    return <div>\r\n                        {key}:\r\n                        <span>\r\n                            <Field component={Input} name={\"contacts.\" + key} type=\"text\"/>\r\n                        </span>\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <button>SAVE</button>\r\n\r\n            {props.error && <div className={styles.summaryError}>\r\n                {\r\n                    props.error\r\n                }\r\n            </div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileInfoReduxForm = reduxForm({\r\n    form: 'profileInfoForm'\r\n})(ProfileInfoForm);\r\n\r\nexport default ProfileInfoEdit;","import React, {useState} from 'react'\r\nimport s from '../Profile.module.scss'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport userPhoto from '../../../assets/img/profile.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileInfoEdit from \"./ProfileInfoEdit\";\r\nimport cn from 'classnames'\r\n\r\n\r\nimport editIcon from \"../../../assets/img/icons/edit.svg\"\r\n\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\nimport camera from \"../../../assets/img/icons/camera.svg\"\r\n\r\nconst ProfileInfoContainer = (props) => {\r\n\r\n    let [isProfileEdit, setIsProfileEdit] = useState(false);\r\n\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const activateProfileEdit = (e) => {\r\n        setIsProfileEdit(true);\r\n    };\r\n    const deactivateProfileEdit = (e) => {\r\n        setIsProfileEdit(false);\r\n    };\r\n\r\n    return (\r\n        <div className={cn('infoBlocksWrap', s.profileWrap)}>\r\n            <div className={cn('infoBlock', s.profileInfoWrap)}>\r\n                <div className={s.profilePhotoWrap}>\r\n                    <img className={s.profilePhoto}\r\n                         src={props.userProfile.photos.large || userPhoto}/>\r\n                    {props.isOwner &&\r\n                    <div className={s.photoChangeWrap}>\r\n                        <div className={s.photoChange}>\r\n                            <span className={s.photoChange__info}>\r\n                                <span className={s.photoChange__infoIcon}\r\n                                      style={{backgroundImage: `url(${camera})`}}></span>\r\n                            </span>\r\n                            <label htmlFor=\"custom-file-upload\" className={s.photoChange__label}>\r\n                                <span className={s.photoChange__changeLink}>Change photo</span>\r\n                                <input name=\"attachment-file\" id=\"custom-file-upload\" className={s.photoChange__input}\r\n                                       type='file' onChange={onMainPhotoSelected}/>\r\n                            </label>\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className={s.profileInfo}>\r\n                    {props.userProfile.fullName &&\r\n                    <div className={s.profileFullName}>\r\n                        {props.userProfile.fullName}\r\n                    </div>\r\n                    }\r\n\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                    {props.userProfile.aboutMe &&\r\n                    <div className={s.profileInfo__item}>\r\n                        {props.userProfile.aboutMe}\r\n                    </div>\r\n                    }\r\n                </div>\r\n\r\n                <button className={s.profileEditBtn} onClick={activateProfileEdit}>\r\n                    <span className={s.profileEditIcon} style={{backgroundImage: `url(${editIcon})`}}></span>\r\n                </button>\r\n            </div>\r\n\r\n            <div className={s.profileColumnsWrap}>\r\n                {isProfileEdit ?\r\n\r\n                    <ProfileInfoEdit saveProfile={props.saveProfile} deactivateProfileEdit={deactivateProfileEdit}\r\n                                     userProfile={props.userProfile} isUpdateProfile={props.isUpdateProfile}/>\r\n                    :\r\n                    <ProfileInfo userProfile={props.userProfile} activateProfileEdit={activateProfileEdit}/>\r\n\r\n                }\r\n                <MyPostsContainer/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileInfo = (props) => {\r\n    const {lookingForAJob, lookingForAJobDescription, fullName, contacts, aboutMe} = props.userProfile;\r\n\r\n    return <div className={s.infoWrap}>\r\n        <div className={cn('infoBlock', s.profileInfoBlockWrap)}>\r\n\r\n            <div className={cn(s.profileInfoBlock__title, 'title--md-greyColor')}>Job</div>\r\n            <div className={cn('title--sm--greyColor')}>\r\n                Looking For A Job: {lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            <div className={s.profileInfoBlock__desc}>\r\n\r\n                {lookingForAJobDescription &&\r\n                <div>\r\n                    <span>{lookingForAJobDescription}</span>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            {contacts && <Contacts contacts={contacts}/>}\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default ProfileInfoContainer;","import React from 'react'\r\nimport ProfileInfoContainer from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n\r\n            <ProfileInfoContainer savePhoto={props.savePhoto} isOwner={props.isOwner} userProfile={props.userProfile}\r\n                                  status={props.status} updateStatus={props.updateStatus}\r\n                                  saveProfile={props.saveProfile} isUpdateProfile={props.isUpdateProfile}\r\n            />\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserId} from \"../../redux/authSelectors\";\r\nimport {getUserProfileSelector} from \"../../redux/profileSelectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n\r\n            //userId = 6268\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        userProfile: getUserProfileSelector(state),\r\n        status: state.profilePage.status,\r\n        authUserId: getAuthUserId(state),\r\n        isAuth: state.auth.isAuth,\r\n        isUpdateProfile: state.profilePage.isUpdateProfile\r\n    }\r\n);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}