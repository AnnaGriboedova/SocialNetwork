{"version":3,"sources":["../node_modules/redux-form/es/formValueSelector.js","../node_modules/redux-form/es/createFormValueSelector.js","components/Profile/Profile.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/common/Emoji/EmojiContainer.module.scss","assets/img/icons/thinking.svg","assets/img/icons/edit.svg","assets/img/icons/soc-network/instagram.svg","assets/img/icons/soc-network/vk.svg","assets/img/icons/soc-network/twitter.svg","assets/img/icons/soc-network/facebook.svg","assets/img/icons/soc-network/github.svg","assets/img/icons/soc-network/youtube.svg","components/Profile/MyPosts/Post/Post.module.scss","assets/img/icons/emoji/smile1.svg","assets/img/icons/emoji/like.svg","assets/img/icons/emoji/footprint.svg","assets/img/icons/emoji/cupcake.svg","assets/img/icons/emoji/earth.svg","assets/img/icons/emoji/ball.svg","assets/img/icons/emoji/t-shirt.svg","assets/img/icons/emoji/faq.svg","assets/img/icons/emoji/flag.svg","assets/img/icons/emoji/more.svg","assets/img/icons/smile.svg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfoEdit.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/dateFormat.js","components/common/Emoji/EmojiList.jsx","components/common/Emoji/Emoji.jsx","hooks/useOnClickOutside.js","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profileSelectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","redux/authSelectors.js","components/Profile/ProfileContainer.jsx"],"names":["createFormValueSelector","_ref","getIn","form","getFormState","invariant","nonNullGetFormState","state","_len","arguments","length","fields","Array","_key","reduce","accumulator","field","value","undefined","plain","setIn","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileStatusWrap","profileStatusContainer","profileStatusIcon","style","backgroundImage","thinkingIcon","profileStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfoReduxForm","reduxForm","contacts","userProfile","onSubmit","handleSubmit","Field","component","Input","name","validate","required","type","Textarea","Object","keys","map","key","error","styles","summaryError","ProfileInfoEdit","Preloader","isUpdateProfile","initialValues","values","saveProfile","then","deactivateProfileEdit","Post","cn","post","wrapper","userInfo","UserSmallPhoto","photo","circle","size","userNameWrap","userName","postDate","date","dd","getDate","mm","getMonth","yy","getFullYear","hours","getHours","minutes","getMinutes","dateFormat","message","like","EmojiButtons","emojisByCategory","setCurrentCategory","currentCategory","emojiCategoryIcons","smile","footprint","cupcake","earth","ball","tshirt","faq","flag","buttonsWrap","category","buttonWrap","onClick","categorySlug","button","active","BtnIcon","more","Emoji","allEmojis","getSubcategoryEmojis","change","isFetching","setIsFetching","cat","filter","subcategoryEmojis","emoji","id","listScrollWrap","list","EmojiItem","role","aria-label","slug","aria-hidden","emojiCharacter","character","EmojiList","listWrap","connect","app","initEmojisByCategory","ref","useRef","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","setIsEmojiOpen","isEmojiOpen","wrap","openBtn","preventDefault","src","AddPostForm","isFormOpen","setIsFormOpen","open","postInfo","authUserProfile","photos","small","messageWrap","onFocus","blurFieldValue","placeholder","messageInput","newVal","changeFieldValue","sendPost","sendBtn","selector","formValueSelector","MyPosts","React","memo","postsElements","posts","sort","a","b","Date","p","user","userPhoto","likesCount","postsWrapper","fullName","addPost","postsHeading","getUserProfileSelector","profilePage","MyPostsContainer","auth","dispatch","formName","fieldName","newFieldValue","blur","ProfileInfo","lookingForAJob","lookingForAJobDescription","isEmptyContactsArrValues","aboutMe","some","socNetworkIcons","vk","instagram","twitter","facebook","github","youtube","infoWrap","profileInfoBlockWrap","profileInfoBlock__title","profileInfoBlock__desc","constructor","contactWrap","contact","href","contactIcon","ProfileInfoContainer","isProfileEdit","setIsProfileEdit","activateProfileEdit","profileWrap","profileInfoWrap","profilePhotoWrap","profilePhoto","large","isOwner","profilePhotoInput","files","savePhoto","profileInfo","profileFullName","profileInfo__item","profileEditBtn","profileEditIcon","editIcon","profileColumnsWrap","Profile","getAuthUserId","userId","ProfileContainer","this","match","params","authUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","isAuth","withRouter"],"mappings":"sIAEeA,ICAA,SAAiCC,GAC9C,IAAIC,EAAQD,EAAKC,MACjB,OAAO,SAAUC,EAAMC,GACrBC,IAAUF,EAAM,gCAEhB,IAAIG,EAAsBF,GAAgB,SAAUG,GAClD,OAAOL,EAAMK,EAAO,SAGtB,OAAO,SAAUA,GACf,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAS,IAAIC,MAAMJ,EAAO,EAAIA,EAAO,EAAI,GAAIK,EAAO,EAAGA,EAAOL,EAAMK,IACpGF,EAAOE,EAAO,GAAKJ,UAAUI,GAI/B,OADAR,IAAUM,EAAOD,OAAQ,uBACA,IAAlBC,EAAOD,OACdR,EAAMI,EAAoBC,GAAQJ,EAAO,WAAaQ,EAAO,IAC7DA,EAAOG,QAAO,SAAUC,EAAaC,GACnC,IAAIC,EAAQf,EAAMI,EAAoBC,GAAQJ,EAAO,WAAaa,GAClE,YAAiBE,IAAVD,EAAsBF,EAAcI,IAAMC,MAAML,EAAaC,EAAOC,KAC1E,MDpBMjB,CAAwBmB,M,oBEDvCE,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,SAAW,0BAA0B,eAAiB,gCAAgC,gBAAkB,iCAAiC,mBAAqB,oCAAoC,gBAAkB,iCAAiC,YAAc,6BAA6B,iBAAmB,kCAAkC,aAAe,8BAA8B,kBAAoB,mCAAmC,gBAAkB,iCAAiC,kBAAoB,mCAAmC,uBAAyB,wCAAwC,kBAAoB,mCAAmC,cAAgB,+BAA+B,qBAAuB,sCAAsC,wBAA0B,yCAAyC,uBAAyB,wCAAwC,SAAW,0BAA0B,YAAc,6BAA6B,QAAU,yBAAyB,YAAc,+B,oBCAxmCD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,KAAO,sBAAsB,KAAO,sBAAsB,SAAW,0BAA0B,aAAe,8BAA8B,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,MAAQ,yB,oBCAnXD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,SAAW,iCAAiC,YAAc,oCAAoC,OAAS,+BAA+B,QAAU,gCAAgC,OAAS,+BAA+B,eAAiB,uCAAuC,KAAO,6BAA6B,MAAQ,gC,oBCD5ZD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,aAAe,2BAA2B,SAAW,uBAAuB,SAAW,yB,oBCDnKD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,kKC8C5BC,EAzCgB,SAACC,GAAW,IAAD,EACRC,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASD,EAAMI,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAItCC,qBAAU,WACND,EAAUL,EAAMI,UAEjB,CAACJ,EAAMI,SAeV,OACI,yBAAKG,UAAWC,IAAEC,oBACZP,GACF,0BAAMK,UAAWC,IAAEE,wBACf,0BAAMH,UAAWC,IAAEG,kBAAmBC,MAAO,CAACC,gBAAgB,OAAD,OAASC,IAAT,QAC7D,0BAAMP,UAAWC,IAAEO,cAAeC,cAlBrB,WACrBb,GAAY,KAiBgEH,EAAMI,QAAU,cAGvFF,GAED,2BAAOe,SAdQ,SAACC,GACpBb,EAAUa,EAAEC,cAAc1B,QAaW2B,WAAW,EAAMC,OAnB/B,WACvBlB,GAAY,GACZH,EAAMsB,aAAalB,IAkBRX,MAAOW,M,mDC4CpBmB,EAAuBC,YAAU,CACnC7C,KAAM,mBADmB6C,EAvDL,SAACxB,GACrB,IAAMyB,EAAWzB,EAAM0B,YAAYD,SACnC,OACI,0BAAME,SAAU3B,EAAM4B,cAElB,2CACe,8BACP,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAM,WAAYC,SAAUC,IAAUC,KAAK,WAI5E,yCAEI,8BACI,kBAACN,EAAA,EAAD,CAAOC,UAAWM,IAAUJ,KAAM,UAAWC,SAAUC,QAI/D,kDAEI,8BACI,kBAACL,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAM,iBAAkBG,KAAK,aAD1D,QAKJ,8DAEI,8BACI,kBAACN,EAAA,EAAD,CAAOC,UAAWM,IAAUJ,KAAM,4BAA6BC,SAAUC,QAIjF,6BACI,uCADJ,IAEKG,OAAOC,KAAKb,GAAUc,KAAI,SAAAC,GACvB,OAAO,6BACFA,EADE,IAEH,8BACI,kBAACX,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAM,YAAcQ,EAAKL,KAAK,eAMvE,wCAECnC,EAAMyC,OAAS,yBAAKlC,UAAWmC,IAAOC,cAE/B3C,EAAMyC,WAWXG,EA/ES,SAAC5C,GACrB,IAAKA,EAAM0B,YACP,OAAO,kBAACmB,EAAA,EAAD,MASX,OACI,6BACK7C,EAAM8C,iBAAmB,kBAACD,EAAA,EAAD,MAC1B,kBAACtB,EAAD,CAAsBwB,cAAe/C,EAAM0B,YAAaA,YAAa1B,EAAM0B,YACrDC,SAVb,SAACqB,GACdhD,EAAMiD,YAAYD,GAAQE,MAAK,WAC3BlD,EAAMmD,gC,4MCaHC,EArBF,SAACpD,GAEV,OACI,yBAAKO,UAAW8C,IAAG,YAAa7C,IAAE8C,OAC9B,yBAAK/C,UAAWC,IAAE+C,SACd,yBAAKhD,UAAWC,IAAEgD,UACd,kBAACC,EAAA,EAAD,CAAgBC,MAAO1D,EAAM0D,MAAOhB,OAAQ,CAACiB,QAAQ,EAAMC,KAAM,QACjE,yBAAKrD,UAAWC,IAAEqD,cACd,0BAAMtD,UAAWC,IAAEsD,UAAW9D,EAAMgC,MACpC,0BAAMzB,UAAWC,IAAEuD,UCfjB,SAACC,GACnB,IAAIC,EAAKD,EAAKE,UACVD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKH,EAAKI,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKL,EAAKM,cAAgB,IAC1BD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAQP,EAAKQ,WACbD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAUT,EAAKU,aAGnB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE3BR,EAAK,IAAME,EAAK,IAAME,EAAK,KAAOE,EAAQ,IAAME,EDDTE,CAAW3E,EAAMgE,SAGvD,yBAAKzD,UAAWC,IAAEoE,SAAU5E,EAAM4E,SAClC,6BACI,8BAAO5E,EAAM6E,KAAb,a,8PEoBdC,GAAe,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,iBAAkBC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,gBACrDC,EAAqB,CACrB,kBAAmBC,KACnB,cAAeN,KACf,iBAAkBO,KAClB,aAAcC,KACd,gBAAiBC,KACjB,WAAcC,KACd,QAAWC,KACX,QAAWC,KACX,MAASC,MAMb,OAAO,yBAAKnF,UAAWC,IAAEmF,aACpBZ,EAAiBxC,KAAI,SAACqD,GACnB,OACI,yBAAKrF,UAAWC,IAAEqF,YACd,4BAAQC,QAAS,WARjB,IAACC,IASWH,EAAQ,aARhCZ,EAAmBe,IAUCxF,UAAW8C,IAAG7C,IAAEwF,OAAQf,IAAoBW,EAASG,cAAgBvF,IAAEyF,SAC3E,0BAAM1F,UAAWC,IAAE0F,QACbtF,MAAO,CAACC,gBAAgB,OAAD,OAASqE,EAAmBU,EAASG,eAAiBI,KAAtD,eAS/CC,GAAQ,SAAC,GAAuE,IAI9EC,EAJQtB,EAAqE,EAArEA,iBAAkBE,EAAmD,EAAnDA,gBAAiBqB,EAAkC,EAAlCA,qBAAsBC,EAAY,EAAZA,OAAY,EAC/CtG,oBAAS,GADsC,mBAC5EuG,EAD4E,KAChEC,EADgE,KAM7EC,EAAM3B,EAAiB4B,QAAO,SAAAf,GAAQ,OACtCA,EAASG,eAAiBd,KAE1BxC,EAAQ,GAqBZ,OAnBKiE,EAAI,GAAGE,kBAaRP,EAAYK,EAAI,GAAGE,kBAAkBrE,KAAI,SAAAsE,GAAK,OAC1C,kBAAC,GAAD,CAAWN,OAAQA,EAAQ/D,IAAKqE,EAAMC,GAAID,MAAOA,OAbhDL,GAAe/D,IAChBgE,GAAc,GACdH,EAAqBrB,GAAiB/B,MAAK,SAACzD,GACxCgH,GAAc,MACf,SAAChH,GAEAgD,EAAQhD,GAAS,mGACjBgH,GAAc,OAWnB,yBAAKlG,UAAWC,IAAEuG,gBACrB,yBAAKxG,UAAWC,IAAEwG,MAEVX,GAAcG,GAAc,kBAAC3D,EAAA,EAAD,OAAiBJ,KASvDwE,GAAY,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,MAAON,EAAY,EAAZA,OAMvB,OAAO,0BACHhG,UAAWC,IAAEqG,MACbK,KAAK,MACLC,aAAYN,EAAMO,MAAQP,EAAMO,KAChCC,eAAcR,EAAMO,KACpBtB,QAAS,WATQ,IAACwB,IAUDT,EAAMU,UATvBhB,EAAOe,KAYNT,EAAMU,YAKAC,GAzHG,SAAC,GAAsD,IAArDzC,EAAoD,EAApDA,iBAAkBuB,EAAkC,EAAlCA,qBAAsBC,EAAY,EAAZA,OAAY,EACxBtG,mBAAS,IADe,mBAC/DgF,EAD+D,KAC9CD,EAD8C,KAQpE,OALA1E,qBAAU,WACN0E,EAAmBD,EAAiB,GAAGgB,gBACxC,IAIC,yBAAKxF,UAAWC,IAAEiH,UAEd,kBAAC,GAAD,CAAc1C,iBAAkBA,EAAkBC,mBAAoBA,EACxDC,gBAAiBA,IAG3BA,GAAmB,kBAAC,GAAD,CAAOF,iBAAkBA,EAAkBE,gBAAiBA,EACrDqB,qBAAsBA,EAAsBC,OAAQA,M,qBCvB9F,IAsCemB,gBANO,SAAC3I,GACnB,MAAO,CACHgG,iBAAkBhG,EAAM4I,IAAI5C,oBAII,CACpC6C,0BACAtB,2BAFWoB,EAtCQ,SAAC,GAA4E,IAA3E3C,EAA0E,EAA1EA,iBAAkB6C,EAAwD,EAAxDA,qBAAsBtB,EAAkC,EAAlCA,qBAAsBC,EAAY,EAAZA,OAC7EsB,EAAMC,oBCPD,SAA2BD,EAAKE,GAC3CzH,qBACI,WACI,IAAM0H,EAAW,SAAAC,GACRJ,EAAIK,UAAWL,EAAIK,QAAQC,SAASF,EAAMG,SAI/CL,EAAQE,IAMZ,OAHAI,SAASC,iBAAiB,YAAaN,GACvCK,SAASC,iBAAiB,aAAcN,GAEjC,WACHK,SAASE,oBAAoB,YAAaP,GAC1CK,SAASE,oBAAoB,aAAcP,MAGnD,CAACH,EAAKE,IDVVS,CAAkBX,GAAK,kBAAMY,GAAe,MAHmD,MAK3DxI,oBAAS,GALkD,mBAK1FyI,EAL0F,KAK7ED,EAL6E,KAsB/F,OAAQ,yBAAKZ,IAAKA,EAAKtH,UAAWC,IAAEmI,MAChC,4BAAQpI,UAAWC,IAAEoI,QAAS9C,QAhBV,SAAC5E,GACrBA,EAAE2H,iBACGH,EASDD,GAAe,GARV1D,EAAiB7F,OAKlBuJ,GAAe,GAJfb,IAAuB1E,MAAK,WACxBuF,GAAe,QAW6B,yBAAKK,IAAK3D,QAEjEuD,GAAe3D,GAChB,kBAAC,GAAD,CAAWwB,OAAQA,EAAQD,qBAAsBA,EAAsBvB,iBAAkBA,QExB7FgE,GAAc,SAAC/I,GAEfM,qBAAU,YACD0I,GAAchJ,EAAM4E,QACrBqE,GAAc,GACPD,IAAehJ,EAAM4E,SAC5BqE,GAAc,KAEnB,CAACjJ,EAAM4E,UARe,MAUS3E,oBAAS,GAVlB,mBAUpB+I,EAVoB,KAURC,EAVQ,KA+BzB,OACI,0BAAMtH,SAAU3B,EAAM4B,aAAcrB,UAAW8C,IAAG,YAAa7C,IAAE7B,KAAMqK,GAAcxI,IAAE0I,OACnF,yBAAK3I,UAAWC,IAAE2I,UACd,kBAAC1F,EAAA,EAAD,CAAgBC,MAAO1D,EAAMoJ,gBAAgBC,OAAOC,MAAO5G,OAAQ,CAACiB,QAAQ,EAAMC,KAAM,QACxF,yBAAKrD,UAAW8C,IAAG7C,IAAE+I,cAEjB,kBAAC1H,EAAA,EAAD,CAAO2H,QAdP,SAACtI,GACb+H,GAAc,IAauB5H,OAzB1B,SAACH,GACZA,EAAE2H,iBAEF7I,EAAMyJ,eAAe,qBAAsB,WAEtCvI,EAAEkH,OAAO3I,OACVwJ,GAAc,IAoBCS,YAAa,qBAAuB1J,EAAM8D,SAC1CvD,UAAW8C,IAAG7C,IAAEmJ,cAChB7H,UAAWM,IAAUJ,KAAM,aAEtC,kBAAC,GAAD,CAAOuE,OAhBJ,SAACqD,GACZ5J,EAAM6J,iBAAiB,qBAAsB,WAAY7J,EAAM4E,SAAW,IAAMgF,OAkB3EZ,GACD,yBAAKzI,UAAWC,IAAEsJ,UACd,4BAAQvJ,UAAW8C,IAAG7C,IAAEuJ,QAAS,WAAjC,eAOhBhB,GAAcvH,YAAU,CACpB7C,KAAM,sBADI6C,CAEXuH,IAEH,IAAMiB,GAAWC,YAAkB,sBAUpBlB,GATfA,GAAcrB,aAAQ,SAAA3I,GAGlB,MAAO,CACH6F,QAHYoF,GAASjL,EAAO,cADtB2I,CAMXqB,IC/BYmB,GArCCC,IAAMC,MAAK,SAAApK,GACvB,IAEIqK,EAFS,YAAOrK,EAAMsK,OACMC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEzG,MAAQ,IAAI0G,KAAKF,EAAExG,SACzCzB,KAAI,SAAAoI,GAAC,OAAI,kBAAC,EAAD,CAAM3G,KAAM2G,EAAE3G,MAAQ,IAAI0G,KACpB1I,KAAO2I,EAAEC,MAAQD,EAAEC,KAAK9G,UAAa,OACrCJ,MAAQiH,EAAEC,MAAQD,EAAEC,KAAKC,WAAcA,IACvCjG,QAAS+F,EAAE/F,QACXC,KAAM8F,EAAEG,gBAc3D,OACI,yBAAKvK,UAAW8C,IAAG,iBAAkB7C,IAAEuK,eACnC,kBAAC,GAAD,CAAarJ,YAAa1B,EAAM0B,YAAa0H,gBAAiBpJ,EAAMoJ,gBACvDK,eAAgBzJ,EAAMyJ,eACtBI,iBAAkB7J,EAAM6J,iBAAkBlI,SAf/C,SAACqB,GACb,IAAI6H,EAAY7K,EAAMoJ,gBAAgBC,OAAOC,MACzCxF,EAAW9D,EAAMoJ,gBAAgB4B,SAGrChL,EAAMiL,QAAQ,CAACL,KAAM,CAACC,YAAW/G,YAAWc,QAAS5B,EAAO4B,UAAU1B,MAAK,gBAW1DY,SAAU9D,EAAM0B,YAAYsJ,WACzC,yBAAKzK,UAAWC,IAAE8J,OACd,wBAAI/J,UAAWC,IAAE0K,cAAjB,gBACCb,OCpCJc,GAAyB,SAAApM,GAClC,OAAOA,EAAMqM,YAAY1J,a,SC8Bd2J,GADU3D,aAvBD,SAAC3I,GACrB,MAAO,CACHuL,MAAOvL,EAAMqM,YAAYd,MACzBlB,gBAAiBrK,EAAMuM,KAAKlC,gBAC5B1H,YAAayJ,GAAuBpM,GACpCgG,iBAAkBhG,EAAM4I,IAAI5C,qBAGT,SAACwG,GACxB,MAAO,CACH1B,iBAAkB,SAAC2B,EAAUC,EAAWC,GACpCH,EAAShF,aAAOiF,EAAUC,EAAWC,KAEzCjC,eAAgB,SAAC+B,EAAUC,EAAWC,GAClCH,EAASI,aAAKH,EAAUC,EAAWC,KAEvCT,QAAS,SAAC3H,GACN,OAAOiI,EAASN,YAAQ3H,QAMXoE,CAA6CwC,IC2DhE0B,GAAc,SAAC5L,GAAW,IAAD,EACsDA,EAAM0B,YAAhFmK,EADoB,EACpBA,eAAgBC,EADI,EACJA,0BAAqCrK,GADjC,EACuBuJ,SADvB,EACiCvJ,UAExDsK,GAHuB,EAC2CC,SAEtC3J,OAAOW,OAAOvB,GAAUwK,MAAK,SAAAxM,GAAK,QAAMA,MAEpEyM,EAAkB,CAClBC,OACAC,cACAC,YACAC,aACAC,WACAC,aAGJ,OAAO,yBAAKjM,UAAWC,IAAEiM,UACrB,yBAAKlM,UAAW8C,IAAG,YAAa7C,IAAEkM,uBAE9B,yBAAKnM,UAAWC,IAAEmM,yBAAlB,OACA,iDACwBd,EAAiB,MAAQ,MAEjD,yBAAKtL,UAAWC,IAAEoM,wBAEbd,GACD,6BACI,8BAAOA,KAMsB,IAAjCzJ,OAAOC,KAAKb,GAAUvC,QAAgBuC,EAASoL,cAAgBxK,SAAW0J,GAC1E,yBAAKxL,UAAWC,IAAEiB,UACbY,OAAOC,KAAKb,GAAUc,KAAI,SAAAC,GACvB,OAAIf,EAASe,GACF,yBAAKjC,UAAWC,IAAEsM,aACrB,uBAAGvM,UAAWC,IAAEuM,QAASC,KAAMvL,EAASe,IACnC0J,EAAgB1J,IACjB,yBAAKjC,UAAWC,IAAEyM,YAAanE,IAAKoD,EAAgB1J,KACnDf,EAASe,KAIf,UAQhB0K,GAxHc,SAAClN,GAAW,IAAD,EAEIC,oBAAS,GAFb,mBAE/BkN,EAF+B,KAEhBC,EAFgB,KAIpC,IAAKpN,EAAM0B,YACP,OAAO,kBAACmB,EAAA,EAAD,MAGX,IAMMwK,EAAsB,SAACnM,GACzBkM,GAAiB,IAMrB,OACI,yBAAK7M,UAAW8C,IAAG,iBAAkB7C,IAAE8M,cACnC,yBAAK/M,UAAW8C,IAAG,YAAa7C,IAAE+M,kBAC9B,yBAAKhN,UAAWC,IAAEgN,kBACd,yBAAKjN,UAAWC,IAAEiN,aACb3E,IAAK9I,EAAM0B,YAAY2H,OAAOqE,OAAS7C,MAC3C7K,EAAM2N,SACP,2BAAOpN,UAAWC,IAAEoN,kBAAmBzL,KAAK,OAAOlB,SApBvC,SAACC,GACrBA,EAAEkH,OAAOyF,MAAM3O,QACfc,EAAM8N,UAAU5M,EAAEkH,OAAOyF,MAAM,QAqB3B,yBAAKtN,UAAWC,IAAEuN,aACb/N,EAAM0B,YAAYsJ,UACnB,yBAAKzK,UAAWC,IAAEwN,iBACbhO,EAAM0B,YAAYsJ,UAIvB,kBAAC,EAAD,CAAwB5K,OAAQJ,EAAMI,OAAQkB,aAActB,EAAMsB,eAEjEtB,EAAM0B,YAAYsK,SACnB,yBAAKzL,UAAWC,IAAEyN,mBACbjO,EAAM0B,YAAYsK,UAK3B,4BAAQzL,UAAWC,IAAE0N,eAAgBpI,QAASuH,GAC1C,0BAAM9M,UAAWC,IAAE2N,gBAAiBvN,MAAO,CAACC,gBAAgB,OAAD,OAASuN,IAAT,UAInE,yBAAK7N,UAAWC,IAAE6N,oBACblB,EAEG,kBAAC,EAAD,CAAiBlK,YAAajD,EAAMiD,YAAaE,sBAtCnC,SAACjC,GAC3BkM,GAAiB,IAsCY1L,YAAa1B,EAAM0B,YAAaoB,gBAAiB9C,EAAM8C,kBAExE,kBAAC,GAAD,CAAapB,YAAa1B,EAAM0B,YAAa2L,oBAAqBA,IAGtE,kBAAC,GAAD,SCpEDiB,GAVC,SAACtO,GACb,OAEQ,kBAAC,GAAD,CAAsB8N,UAAW9N,EAAM8N,UAAWH,QAAS3N,EAAM2N,QAASjM,YAAa1B,EAAM0B,YACvEtB,OAAQJ,EAAMI,OAAQkB,aAActB,EAAMsB,aAC1C2B,YAAajD,EAAMiD,YAAaH,gBAAiB9C,EAAM8C,mB,iBCR5EyL,GAAgB,SAAAxP,GACzB,OAAOA,EAAMuM,KAAKkD,QCQhBC,G,+KAEE,IAAID,EAASE,KAAK1O,MAAM2O,MAAMC,OAAOJ,OAChCA,IACDA,EAASE,KAAK1O,MAAM6O,aAEhBH,KAAK1O,MAAM8O,QAAQC,KAAK,UAKhCL,KAAK1O,MAAMgP,eAAeR,GAC1BE,KAAK1O,MAAMiP,UAAUT,K,0CAIrBE,KAAKQ,mB,yCAGUC,EAAWC,EAAWC,GACjCX,KAAK1O,MAAM2O,MAAMC,OAAOJ,QAAUW,EAAUR,MAAMC,OAAOJ,QACzDE,KAAKQ,mB,+BAKT,OACI,kBAAC,GAAD,iBAAaR,KAAK1O,MAAlB,CAAyB2N,SAAUe,KAAK1O,MAAM2O,MAAMC,OAAOJ,c,GA3BxCrE,IAAMmF,WA0CtBC,uBACX7H,aAXkB,SAAC3I,GAAD,MAClB,CACI2C,YAAayJ,GAAuBpM,GACpCqB,OAAQrB,EAAMqM,YAAYhL,OAC1ByO,WAAYN,GAAcxP,GAC1ByQ,OAAQzQ,EAAMuM,KAAKkE,OACnB1M,gBAAiB/D,EAAMqM,YAAYtI,mBAKd,CACrBkM,mBACAC,cACA3N,iBACAwM,cACA7K,kBAEJwM,KARWF,CAUbd","file":"static/js/3.acad975f.chunk.js","sourcesContent":["import createFormValueSelector from './createFormValueSelector';\nimport plain from './structure/plain';\nexport default createFormValueSelector(plain);","import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Profile_image__1lKYQ\",\"profileWrap\":\"Profile_profileWrap__4QSCb\",\"infoWrap\":\"Profile_infoWrap__35zIN\",\"profileEditBtn\":\"Profile_profileEditBtn__3j8rK\",\"profileEditIcon\":\"Profile_profileEditIcon__27v1G\",\"profileColumnsWrap\":\"Profile_profileColumnsWrap__1zGkZ\",\"profileInfoWrap\":\"Profile_profileInfoWrap__2Fu_x\",\"profileInfo\":\"Profile_profileInfo__38_tu\",\"profilePhotoWrap\":\"Profile_profilePhotoWrap__3Drsj\",\"profilePhoto\":\"Profile_profilePhoto__T8iHO\",\"profilePhotoInput\":\"Profile_profilePhotoInput__1Smoz\",\"profileFullName\":\"Profile_profileFullName__3W8Iy\",\"profileStatusWrap\":\"Profile_profileStatusWrap__1a3g4\",\"profileStatusContainer\":\"Profile_profileStatusContainer__1R_iw\",\"profileStatusIcon\":\"Profile_profileStatusIcon__1eTMl\",\"profileStatus\":\"Profile_profileStatus__LHDRn\",\"profileInfoBlockWrap\":\"Profile_profileInfoBlockWrap__3Umou\",\"profileInfoBlock__title\":\"Profile_profileInfoBlock__title__AIQ99\",\"profileInfoBlock__desc\":\"Profile_profileInfoBlock__desc__2F52l\",\"contacts\":\"Profile_contacts__yg1ch\",\"contactWrap\":\"Profile_contactWrap__2QqWE\",\"contact\":\"Profile_contact__2Roal\",\"contactIcon\":\"Profile_contactIcon__1CHIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__-_att\",\"form\":\"MyPosts_form__1m9EK\",\"open\":\"MyPosts_open__sLTrD\",\"postInfo\":\"MyPosts_postInfo__3By3z\",\"messageInput\":\"MyPosts_messageInput__3G8i3\",\"messageWrap\":\"MyPosts_messageWrap__28nVn\",\"sendPost\":\"MyPosts_sendPost__yQred\",\"sendBtn\":\"MyPosts_sendBtn__BxD6R\",\"postsHeading\":\"MyPosts_postsHeading__d0rrB\",\"posts\":\"MyPosts_posts__1pyyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"EmojiContainer_wrap__vNtaJ\",\"openBtn\":\"EmojiContainer_openBtn__1Jrut\",\"listWrap\":\"EmojiContainer_listWrap__3choq\",\"buttonsWrap\":\"EmojiContainer_buttonsWrap__PzgIm\",\"button\":\"EmojiContainer_button__HooHM\",\"BtnIcon\":\"EmojiContainer_BtnIcon__2Btiu\",\"active\":\"EmojiContainer_active__1mTXq\",\"listScrollWrap\":\"EmojiContainer_listScrollWrap__1KdVD\",\"list\":\"EmojiContainer_list__1fgEi\",\"emoji\":\"EmojiContainer_emoji__1I0Aq\"};","module.exports = __webpack_public_path__ + \"static/media/thinking.2633d732.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.e720936c.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.7addff74.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.f7c8a4b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.eeda54ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.dee886ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.7dea87fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.22655211.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__2ERc0\",\"post\":\"Post_post__K_baX\",\"userNameWrap\":\"Post_userNameWrap__XEv0N\",\"postDate\":\"Post_postDate__CKqB3\",\"userInfo\":\"Post_userInfo__2eQ5z\"};","module.exports = __webpack_public_path__ + \"static/media/smile1.58ec9f26.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.d411fef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/footprint.0dd82fda.svg\";","module.exports = __webpack_public_path__ + \"static/media/cupcake.794e6356.svg\";","module.exports = __webpack_public_path__ + \"static/media/earth.24cb9523.svg\";","module.exports = __webpack_public_path__ + \"static/media/ball.6a38616c.svg\";","module.exports = __webpack_public_path__ + \"static/media/t-shirt.f7bd3ca4.svg\";","module.exports = __webpack_public_path__ + \"static/media/faq.b938b69d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.844006a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.2822fb05.svg\";","module.exports = __webpack_public_path__ + \"static/media/smile.88ab0180.svg\";","import React, {useState, useEffect} from 'react';\r\nimport s from '../Profile.module.scss'\r\n\r\nimport thinkingIcon from \"../../../assets/img/icons/thinking.svg\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div className={s.profileStatusWrap}>\r\n            {!editMode &&\r\n            <span className={s.profileStatusContainer}>\r\n                <span className={s.profileStatusIcon} style={{backgroundImage: `url(${thinkingIcon})`}}></span>\r\n                <span className={s.profileStatus} onDoubleClick={activateEditMode}>{props.status || '---------'}</span>\r\n            </span>\r\n            }\r\n            {editMode &&\r\n\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                   value={status}/>\r\n\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.scss\";\r\n\r\nconst ProfileInfoEdit = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.saveProfile(values).then(() => {\r\n            props.deactivateProfileEdit();\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.isUpdateProfile && <Preloader/>}\r\n            <ProfileInfoReduxForm initialValues={props.userProfile} userProfile={props.userProfile}\r\n                                  onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    const contacts = props.userProfile.contacts;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                full Name: <span>\r\n                    <Field component={Input} name={'fullName'} validate={required} type=\"text\"/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                About Me:\r\n                <span>\r\n                    <Field component={Textarea} name={'aboutMe'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job:\r\n                <span>\r\n                    <Field component={Input} name={'lookingForAJob'} type=\"checkbox\"/>YES\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                Looking For A Job Description:\r\n                <span>\r\n                    <Field component={Textarea} name={'lookingForAJobDescription'} validate={required}/>\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts</b>:\r\n                {Object.keys(contacts).map(key => {\r\n                    return <div>\r\n                        {key}:\r\n                        <span>\r\n                            <Field component={Input} name={\"contacts.\" + key} type=\"text\"/>\r\n                        </span>\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <button>SAVE</button>\r\n\r\n            {props.error && <div className={styles.summaryError}>\r\n                {\r\n                    props.error\r\n                }\r\n            </div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileInfoReduxForm = reduxForm({\r\n    form: 'profileInfoForm'\r\n})(ProfileInfoForm);\r\n\r\nexport default ProfileInfoEdit;","import React from 'react'\r\nimport s from './Post.module.scss'\r\nimport UserSmallPhoto from \"../../../common/UserSmallPhoto/UserSmallPhoto\";\r\nimport cn from \"classnames\";\r\nimport {dateFormat} from \"../../../../utils/dateFormat\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cn('infoBlock', s.post)}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.userInfo}>\r\n                    <UserSmallPhoto photo={props.photo} styles={{circle: true, size: 'md'}}/>\r\n                    <div className={s.userNameWrap}>\r\n                        <span className={s.userName}>{props.name}</span>\r\n                        <span className={s.postDate}>{dateFormat(props.date)}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div>\r\n                    <span>{props.like} like</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","export const dateFormat = (date) => {\r\n        let dd = date.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n\r\n        let mm = date.getMonth() + 1;\r\n        if (mm < 10) mm = '0' + mm;\r\n\r\n        let yy = date.getFullYear() % 100;\r\n        if (yy < 10) yy = '0' + yy;\r\n\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0' + hours;\r\n\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0' + minutes;\r\n\r\n        return dd + '.' + mm + '.' + yy + '  ' + hours + \":\" + minutes;\r\n    }","import React, {useState, useEffect} from 'react';\r\nimport s from './EmojiContainer.module.scss';\r\nimport cn from 'classnames'\r\nimport smile from '../../../assets/img/icons/emoji/smile1.svg'\r\nimport like from '../../../assets/img/icons/emoji/like.svg'\r\nimport footprint from '../../../assets/img/icons/emoji/footprint.svg'\r\nimport cupcake from '../../../assets/img/icons/emoji/cupcake.svg'\r\nimport earth from '../../../assets/img/icons/emoji/earth.svg'\r\nimport ball from '../../../assets/img/icons/emoji/ball.svg'\r\nimport tshirt from '../../../assets/img/icons/emoji/t-shirt.svg'\r\nimport faq from '../../../assets/img/icons/emoji/faq.svg'\r\nimport flag from '../../../assets/img/icons/emoji/flag.svg'\r\nimport more from '../../../assets/img/icons/emoji/more.svg'\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst EmojiList = ({emojisByCategory, getSubcategoryEmojis, change}) => {\r\n    let [currentCategory, setCurrentCategory] = useState('');\r\n\r\n    useEffect(() => {\r\n        setCurrentCategory(emojisByCategory[0].categorySlug)\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className={s.listWrap}>\r\n\r\n            <EmojiButtons emojisByCategory={emojisByCategory} setCurrentCategory={setCurrentCategory}\r\n                          currentCategory={currentCategory}/>\r\n\r\n            {\r\n                currentCategory && <Emoji emojisByCategory={emojisByCategory} currentCategory={currentCategory}\r\n                                          getSubcategoryEmojis={getSubcategoryEmojis} change={change}/>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nconst EmojiButtons = ({emojisByCategory, setCurrentCategory, currentCategory}) => {\r\n    let emojiCategoryIcons = {\r\n        \"smileys-emotion\": smile,\r\n        \"people-body\": like,\r\n        \"animals-nature\": footprint,\r\n        \"food-drink\": cupcake,\r\n        \"travel-places\": earth,\r\n        \"activities\": ball,\r\n        \"objects\": tshirt,\r\n        \"symbols\": faq,\r\n        \"flags\": flag\r\n    };\r\n    const onClick = (categorySlug) => {\r\n        setCurrentCategory(categorySlug);\r\n    };\r\n\r\n    return <div className={s.buttonsWrap}>\r\n        {emojisByCategory.map((category) => {\r\n            return (\r\n                <div className={s.buttonWrap}>\r\n                    <button onClick={() => {\r\n                        onClick(category['categorySlug']);\r\n                    }}\r\n                            className={cn(s.button, currentCategory === category.categorySlug && s.active)}>\r\n                        <span className={s.BtnIcon}\r\n                              style={{backgroundImage: `url(${emojiCategoryIcons[category.categorySlug] || more})`}}/>\r\n                    </button>\r\n                </div>\r\n\r\n            )\r\n        })}\r\n    </div>\r\n};\r\n\r\nconst Emoji = ({emojisByCategory, currentCategory, getSubcategoryEmojis, change}) => {\r\n    let [isFetching, setIsFetching] = useState(false);\r\n\r\n\r\n    let allEmojis;\r\n\r\n    let cat = emojisByCategory.filter(category =>\r\n        category.categorySlug === currentCategory\r\n    );\r\n    let error = '';\r\n\r\n    if (!cat[0].subcategoryEmojis) {\r\n        if (!isFetching && !error) {\r\n            setIsFetching(true);\r\n            getSubcategoryEmojis(currentCategory).then((value) => {\r\n                setIsFetching(false);\r\n            }, (value) => {\r\n                debugger\r\n                error = value || 'что-то пошло не так..';\r\n                setIsFetching(false);\r\n\r\n            })\r\n        }\r\n    } else {\r\n        allEmojis = cat[0].subcategoryEmojis.map(emoji =>\r\n            <EmojiItem change={change} key={emoji.id} emoji={emoji}/>\r\n        );\r\n    }\r\n\r\n\r\n    return <div className={s.listScrollWrap}>\r\n        <div className={s.list}>\r\n            {\r\n                allEmojis || (isFetching && <Preloader/>) || error\r\n\r\n\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nconst EmojiItem = ({emoji, change}) => {\r\n\r\n    const onEmojiClick = (emojiCharacter) => {\r\n        change(emojiCharacter)\r\n    };\r\n\r\n    return <span\r\n        className={s.emoji}\r\n        role=\"img\"\r\n        aria-label={emoji.slug && emoji.slug}\r\n        aria-hidden={!emoji.slug}\r\n        onClick={() => {\r\n            onEmojiClick(emoji.character)\r\n        }}\r\n    >\r\n        {emoji.character}\r\n    </span>\r\n};\r\n\r\n\r\nexport default EmojiList;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport s from './EmojiContainer.module.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {getSubcategoryEmojis, initEmojisByCategory} from \"../../../redux/appReducer\";\r\nimport EmojiList from \"./EmojiList\";\r\nimport smile from \"../../../assets/img/icons/smile.svg\";\r\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\r\n\r\nconst EmojiContainer = ({emojisByCategory, initEmojisByCategory, getSubcategoryEmojis, change}) => {\r\n    const ref = useRef();\r\n\r\n    useOnClickOutside(ref, () => setIsEmojiOpen(false));\r\n\r\n    let [isEmojiOpen, setIsEmojiOpen] = useState(false);\r\n\r\n    const onEmojiBtnClick = (e) => {\r\n        e.preventDefault();\r\n        if (!isEmojiOpen) {\r\n            if (!emojisByCategory.length) {\r\n                initEmojisByCategory().then(() => {\r\n                    setIsEmojiOpen(true)\r\n                })\r\n            } else {\r\n                setIsEmojiOpen(true)\r\n            }\r\n        } else {\r\n            setIsEmojiOpen(false)\r\n        }\r\n    };\r\n\r\n    return (<div ref={ref} className={s.wrap}>\r\n        <button className={s.openBtn} onClick={onEmojiBtnClick}><img src={smile}/></button>\r\n\r\n        {isEmojiOpen && emojisByCategory &&\r\n        <EmojiList change={change} getSubcategoryEmojis={getSubcategoryEmojis} emojisByCategory={emojisByCategory}/>}\r\n    </div>)\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        emojisByCategory: state.app.emojisByCategory\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    initEmojisByCategory,\r\n    getSubcategoryEmojis\r\n})(EmojiContainer);\r\n","import { useEffect} from 'react';\r\n\r\nexport default function useOnClickOutside(ref, handler) {\r\n    useEffect(\r\n        () => {\r\n            const listener = event => {\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n\r\n                handler(event);\r\n            };\r\n\r\n            document.addEventListener('mousedown', listener);\r\n            document.addEventListener('touchstart', listener);\r\n\r\n            return () => {\r\n                document.removeEventListener('mousedown', listener);\r\n                document.removeEventListener('touchstart', listener);\r\n            };\r\n        },\r\n        [ref, handler]\r\n    );\r\n}","import React, {useEffect, useState} from 'react'\r\nimport s from './MyPosts.module.scss'\r\nimport {Field, reduxForm, change, formValueSelector} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport cn from 'classnames'\r\nimport UserSmallPhoto from \"../../common/UserSmallPhoto/UserSmallPhoto\";\r\nimport Emoji from \"../../common/Emoji/Emoji\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet AddPostForm = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (!isFormOpen && props.message) {\r\n            setIsFormOpen(true);\r\n        } else if (isFormOpen && !props.message) {\r\n            setIsFormOpen(false);\r\n        }\r\n    }, [props.message]);\r\n\r\n    let [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n    const onBlur = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.blurFieldValue('profileAddPostForm', 'message');\r\n\r\n        if (!e.target.value) {\r\n            setIsFormOpen(false)\r\n        }\r\n\r\n    };\r\n\r\n    const onFocus = (e) => {\r\n        setIsFormOpen(true);\r\n    };\r\n    const change = (newVal) => {\r\n        props.changeFieldValue('profileAddPostForm', 'message', (props.message || '') + newVal);\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={cn('infoBlock', s.form, isFormOpen && s.open)}>\r\n            <div className={s.postInfo}>\r\n                <UserSmallPhoto photo={props.authUserProfile.photos.small} styles={{circle: true, size: 'sm'}}/>\r\n                <div className={cn(s.messageWrap)}>\r\n\r\n                    <Field onFocus={onFocus} onBlur={onBlur}\r\n                           placeholder={'Type something to ' + props.userName}\r\n                           className={cn(s.messageInput)}\r\n                           component={Textarea} name={'message'}/>\r\n                </div>\r\n                <Emoji change={change}/>\r\n            </div>\r\n\r\n            {isFormOpen &&\r\n            <div className={s.sendPost}>\r\n                <button className={cn(s.sendBtn, 'button')}>Add Post</button>\r\n            </div>\r\n            }\r\n        </form>\r\n    )\r\n};\r\n\r\nAddPostForm = reduxForm({\r\n    form: 'profileAddPostForm'\r\n})(AddPostForm);\r\n\r\nconst selector = formValueSelector('profileAddPostForm');\r\nAddPostForm = connect(state => {\r\n    const message = selector(state, 'message');\r\n\r\n    return {\r\n        message\r\n    }\r\n})(AddPostForm);\r\n\r\n\r\nexport default AddPostForm;","import React from 'react'\r\nimport s from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport userPhoto from \"../../../assets/img/profile.png\";\r\nimport cn from 'classnames'\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsCopy = [...props.posts];\r\n    let postsSortByDate = postsCopy.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    let postsElements = postsSortByDate.map(p => <Post date={p.date || new Date()}\r\n                                                       name={(p.user && p.user.userName) || 'Name'}\r\n                                                       photo={(p.user && p.user.userPhoto) || userPhoto}\r\n                                                       message={p.message}\r\n                                                       like={p.likesCount}/>);\r\n\r\n\r\n    const addPost = (values) => {\r\n        let userPhoto = props.authUserProfile.photos.small;\r\n        let userName = props.authUserProfile.fullName;\r\n\r\n\r\n        props.addPost({user: {userPhoto, userName}, message: values.message}).then(() => {\r\n            debugger\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={cn('infoBlocksWrap', s.postsWrapper)}>\r\n            <AddPostForm userProfile={props.userProfile} authUserProfile={props.authUserProfile}\r\n                         blurFieldValue={props.blurFieldValue}\r\n                         changeFieldValue={props.changeFieldValue} onSubmit={addPost}\r\n                         userName={props.userProfile.fullName}/>\r\n            <div className={s.posts}>\r\n                <h3 className={s.postsHeading}>Publications</h3>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","export const getUserProfileSelector = state => {\r\n    return state.profilePage.userProfile;\r\n};","import React from 'react'\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileSelector} from \"../../../redux/profileSelectors\";\r\nimport {change, blur} from \"redux-form\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        authUserProfile: state.auth.authUserProfile,\r\n        userProfile: getUserProfileSelector(state),\r\n        emojisByCategory: state.app.emojisByCategory\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeFieldValue: (formName, fieldName, newFieldValue) => {\r\n            dispatch(change(formName, fieldName, newFieldValue))\r\n        },\r\n        blurFieldValue: (formName, fieldName, newFieldValue) => {\r\n            dispatch(blur(formName, fieldName, newFieldValue))\r\n        },\r\n        addPost: (post) => {\r\n            return dispatch(addPost(post));\r\n        },\r\n\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React, {useState} from 'react'\r\nimport s from '../Profile.module.scss'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/img/profile.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileInfoEdit from \"./ProfileInfoEdit\";\r\nimport cn from 'classnames'\r\n\r\n\r\nimport editIcon from \"../../../assets/img/icons/edit.svg\"\r\n\r\nimport instagram from \"../../../assets/img/icons/soc-network/instagram.svg\"\r\nimport vk from \"../../../assets/img/icons/soc-network/vk.svg\"\r\nimport twitter from \"../../../assets/img/icons/soc-network/twitter.svg\"\r\nimport facebook from \"../../../assets/img/icons/soc-network/facebook.svg\"\r\nimport github from \"../../../assets/img/icons/soc-network/github.svg\"\r\nimport youtube from \"../../../assets/img/icons/soc-network/youtube.svg\"\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst ProfileInfoContainer = (props) => {\r\n\r\n    let [isProfileEdit, setIsProfileEdit] = useState(false);\r\n\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const activateProfileEdit = (e) => {\r\n        setIsProfileEdit(true);\r\n    };\r\n    const deactivateProfileEdit = (e) => {\r\n        setIsProfileEdit(false);\r\n    };\r\n\r\n    return (\r\n        <div className={cn('infoBlocksWrap', s.profileWrap)}>\r\n            <div className={cn('infoBlock', s.profileInfoWrap)}>\r\n                <div className={s.profilePhotoWrap}>\r\n                    <img className={s.profilePhoto}\r\n                         src={props.userProfile.photos.large || userPhoto}/>\r\n                    {props.isOwner &&\r\n                    <input className={s.profilePhotoInput} type='file' onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                <div className={s.profileInfo}>\r\n                    {props.userProfile.fullName &&\r\n                    <div className={s.profileFullName}>\r\n                        {props.userProfile.fullName}\r\n                    </div>\r\n                    }\r\n\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                    {props.userProfile.aboutMe &&\r\n                    <div className={s.profileInfo__item}>\r\n                        {props.userProfile.aboutMe}\r\n                    </div>\r\n                    }\r\n                </div>\r\n\r\n                <button className={s.profileEditBtn} onClick={activateProfileEdit}>\r\n                    <span className={s.profileEditIcon} style={{backgroundImage: `url(${editIcon})`}}></span>\r\n                </button>\r\n            </div>\r\n\r\n            <div className={s.profileColumnsWrap}>\r\n                {isProfileEdit ?\r\n\r\n                    <ProfileInfoEdit saveProfile={props.saveProfile} deactivateProfileEdit={deactivateProfileEdit}\r\n                                     userProfile={props.userProfile} isUpdateProfile={props.isUpdateProfile}/>\r\n                    :\r\n                    <ProfileInfo userProfile={props.userProfile} activateProfileEdit={activateProfileEdit}/>\r\n\r\n                }\r\n                <MyPostsContainer/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileInfo = (props) => {\r\n    const {lookingForAJob, lookingForAJobDescription, fullName, contacts, aboutMe} = props.userProfile;\r\n\r\n    let isEmptyContactsArrValues = !Object.values(contacts).some(value => !!value);\r\n\r\n    let socNetworkIcons = {\r\n        vk,\r\n        instagram,\r\n        twitter,\r\n        facebook,\r\n        github,\r\n        youtube\r\n    };\r\n\r\n    return <div className={s.infoWrap}>\r\n        <div className={cn('infoBlock', s.profileInfoBlockWrap)}>\r\n\r\n            <div className={s.profileInfoBlock__title}>Job</div>\r\n            <b>\r\n                Looking For A Job: {lookingForAJob ? 'yes' : 'no'}\r\n            </b>\r\n            <div className={s.profileInfoBlock__desc}>\r\n\r\n                {lookingForAJobDescription &&\r\n                <div>\r\n                    <span>{lookingForAJobDescription}</span>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                Object.keys(contacts).length !== 0 && contacts.constructor === Object && !isEmptyContactsArrValues &&\r\n                <div className={s.contacts}>\r\n                    {Object.keys(contacts).map(key => {\r\n                        if (contacts[key]) {\r\n                            return <div className={s.contactWrap}>\r\n                                <a className={s.contact} href={contacts[key]}>\r\n                                    {socNetworkIcons[key] &&\r\n                                    <img className={s.contactIcon} src={socNetworkIcons[key]}/>}\r\n                                    {contacts[key]}\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        return '';\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfoContainer;","import React from 'react'\r\nimport ProfileInfoContainer from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n\r\n            <ProfileInfoContainer savePhoto={props.savePhoto} isOwner={props.isOwner} userProfile={props.userProfile}\r\n                                  status={props.status} updateStatus={props.updateStatus}\r\n                                  saveProfile={props.saveProfile} isUpdateProfile={props.isUpdateProfile}\r\n            />\r\n    )\r\n};\r\n\r\nexport default Profile;","export const getAuthUserId = state => {\r\n    return state.auth.userId;\r\n};","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserId} from \"../../redux/authSelectors\";\r\nimport {getUserProfileSelector} from \"../../redux/profileSelectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n\r\n            //userId = 6268\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        userProfile: getUserProfileSelector(state),\r\n        status: state.profilePage.status,\r\n        authUserId: getAuthUserId(state),\r\n        isAuth: state.auth.isAuth,\r\n        isUpdateProfile: state.profilePage.isUpdateProfile\r\n    }\r\n);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}