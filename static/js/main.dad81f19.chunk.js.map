{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/common/UserSmallPhoto/UserSmallPhoto.jsx","api/api.js","redux/dialogsReducer.js","components/Header/logo1.png","assets/img/icons/loading.svg","assets/img/icons/nav/logout.svg","assets/img/icons/nav/profile.svg","assets/img/icons/nav/group-profile-users.svg","assets/img/icons/nav/chat.svg","assets/img/icons/nav/newspaper.svg","assets/img/icons/nav/music.svg","assets/img/icons/nav/settings.svg","components/Users/Users.module.scss","redux/authReducer.js","serviceWorker.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Logout/Logout.jsx","components/Navbar/Logout/LogoutContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/objectHelpers.js","redux/usersReducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/navbarReducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.jsx","components/Header/Header.module.scss","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.scss","assets/img/profile.png","utils/validators/validators.js","redux/appReducer.js","components/common/UserSmallPhoto/UserSmallPhoto.module.scss","components/common/Paginator/Paginator.module.scss","redux/profileReducer.js"],"names":["module","exports","UserSmallPhoto","photo","styles","className","cn","s","profilePhoto","circle","size","src","userPhoto","instance","axios","withCredentials","baseURL","headers","instanceEmoji","emojiApi","getEmojiCategory","get","getSubcategoryEmojis","categorySlug","usersAPI","getUsers","currentPage","pageSize","then","response","data","deleteFriend","friendId","delete","addFriend","post","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profileData","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageText","type","dialogsReducer","state","action","isAuth","captchaUrl","authUserProfile","setUserAuthData","payload","getCaptchaUrlSuccess","getAuthUserInfo","dispatch","a","getAuthUserData","resultCode","length","stopSubmit","_error","url","authReducer","Boolean","window","location","hostname","match","Header","props","header","logo","alt","header__logo","profileInfoWrap","photos","small","profileFullName","profileFullNameTitle","Preloader","HeaderContainer","this","React","Component","connect","auth","Logout","logoutBlock","href","onClick","style","backgroundImage","usersIcon","logoutBlock__icon","LogoutContainer","Navbar","navContainer","navWrapper","navTitle","nav","nav__item","to","activeClassName","active","profileIcon","nav__itemIcon","dialogsIcon","newsIcon","musicIcon","settingsIcon","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","usersTotalCount","isFetching","onFollowingUsersId","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","followUnfollowFLow","apiMethod","actionCreator","usersReducer","followed","totalCount","filter","Paginator","pagesCount","Math","ceil","itemsTotalCount","pages","i","push","portionSize","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginationWrapper","p","key","onPageChanged","selectedPage","paginator__pageItem","User","user","follow","unfollow","userWrapper","userProfile","profileImgLink","profileImg","userInfoWrapper","userInfo","userName","userStatus","userButtonWrapper","disabled","some","Users","usersContainer","createSelector","usersPage","getPageSize","getUsersTotalCount","getCurrentPage","getIsFetching","getOnFollowingUsersId","UsersAPI","pageNum","requestUsers","compose","page","bind","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","summaryError","friends","navbarReducer","reducers","combineReducers","app","appReducer","profilePage","profileReducer","dialogsPage","navbar","formReducer","plugin","profileAddPostForm","ADD_POST","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandedErrors","e","alert","reason","initializeApp","addEventListener","removeEventListener","initialized","exact","render","path","UsersContainer","AppContainer","withRouter","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","loadingImg","Element","input","meta","touched","hasError","formControl","Textarea","value","emojisByCategory","subcategoryEmojis","setSubcategoryEmojis","Promise","reject","initEmojisByCategory","emojisCategory_response","category","categoryObj","slug","setEmojisByCategory","promise","all","posts","likesCount","date","Date","isUpdateProfile","addPost","responsePost","resolve","setTimeout","min","max","rand","random","round","randomInteger","addPostActionCreator","getUserProfile","setStatus","toggleIsUpdateProfile","getState","postId"],"mappings":"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","file":"static/js/main.dad81f19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Navbar_navContainer___T7Xe\",\"friendsBlock\":\"Navbar_friendsBlock__3qAiE\",\"heading\":\"Navbar_heading__wFIvf\",\"friendsList\":\"Navbar_friendsList__33UgD\",\"friendItem\":\"Navbar_friendItem__5pW2t\",\"profileImage\":\"Navbar_profileImage__3Z9dp\",\"navWrapper\":\"Navbar_navWrapper__3sems\",\"navTitle\":\"Navbar_navTitle__3U7yA\",\"nav\":\"Navbar_nav__q2sdI\",\"nav__item\":\"Navbar_nav__item__28xPV\",\"active\":\"Navbar_active__2Gx7J\",\"nav__itemIcon\":\"Navbar_nav__itemIcon__1GtyM\",\"logoutBlock\":\"Navbar_logoutBlock__1ZQ1f\",\"logoutBlock__icon\":\"Navbar_logoutBlock__icon__AXDNc\"};","import s from \"./UserSmallPhoto.module.scss\";\r\nimport userPhoto from \"../../../assets/img/profile.png\";\r\nimport React from \"react\";\r\nimport cn from 'classnames';\r\n\r\nconst UserSmallPhoto = ({photo, styles}) => {\r\n    return (\r\n        <img className={cn(s.profilePhoto, styles && {\r\n            [s.circle]: styles.circle,\r\n            [s[styles.size]]: styles.size\r\n        })} src={photo || userPhoto}/>\r\n    )\r\n};\r\n\r\nexport default UserSmallPhoto;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": 'b642d82c-c58f-4b37-b2e1-e519e95e6a02'\r\n    }\r\n});\r\n\r\nconst instanceEmoji = axios.create({\r\n    baseURL: 'https://emoji-api.com/',\r\n    headers: {\r\n        \"API-KEY\": 'df363abb0aaceb6736b1e98b26ac4127aa5a6e4e',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const emojiApi = {\r\n    getEmojiCategory() {\r\n        return instanceEmoji.get('categories?access_key=df363abb0aaceb6736b1e98b26ac4127aa5a6e4e')\r\n    },\r\n    getSubcategoryEmojis(categorySlug) {\r\n        return instanceEmoji.get(`categories/${categorySlug}?access_key=df363abb0aaceb6736b1e98b26ac4127aa5a6e4e`)\r\n    },\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteFriend(friendId) {\r\n        return instance.delete(`follow/${friendId}`);\r\n    },\r\n    addFriend(friendId) {\r\n        return instance.post(`follow/${friendId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {\r\n            status\r\n        });\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profileData) {\r\n        return instance.put('profile/', profileData);\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n};\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Anna'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Dima'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'yo'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Where are you'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: action.newMessageText}]\r\n            };\r\n\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageText) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessageText\r\n});\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/logo1.b09d2876.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.280f196b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.4696fa93.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.cf543b7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/group-profile-users.d6b4fe7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat.eca3e50e.svg\";","module.exports = __webpack_public_path__ + \"static/media/newspaper.2cc32a0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.d78cdd7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.4e80bd4b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1Uctm\",\"userWrapper\":\"Users_userWrapper__23o8U\",\"userInfoWrapper\":\"Users_userInfoWrapper__1oWFV\",\"userInfo\":\"Users_userInfo__2KTCb\",\"userNameWrap\":\"Users_userNameWrap__1h1qJ\",\"userStatus\":\"Users_userStatus__adhqC\",\"userButtonWrapper\":\"Users_userButtonWrapper__246F-\",\"profileImg\":\"Users_profileImg__1_zII\"};","import {authAPI, securityAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\nconst SET_AUTH_USER_PROFILE = 'auth/SET_AUTH_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    authUserProfile: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            };\r\n        }\r\n        case SET_AUTH_USER_PROFILE: {\r\n            return {...state, authUserProfile: action.authUserProfile}\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\n\r\nexport const setUserAuthData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth},\r\n});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    captchaUrl\r\n});\r\nexport const setAuthUserProfile = (authUserProfile) => ({\r\n    type: SET_AUTH_USER_PROFILE,\r\n    authUserProfile\r\n});\r\n\r\nexport const getAuthUserInfo = (userId) =>\r\n    async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId);\r\n\r\n        dispatch(setAuthUserProfile(response.data));\r\n\r\n    }\r\n;\r\n\r\nexport const getAuthUserData = () =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.me();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n\r\n            dispatch(setUserAuthData(id, email, login, true));\r\n            await dispatch(getAuthUserInfo(id));\r\n        }\r\n\r\n    };\r\n\r\nexport const login = (email, password, rememberMe, captcha) =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    };\r\nexport const logout = () =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserAuthData(null, null, null, false));\r\n        }\r\n\r\n    };\r\n\r\nexport const getCaptchaUrl = () =>\r\n    async (dispatch) => {\r\n        const response = await securityAPI.getCaptchaUrl();\r\n        const captchaUrl = response.data.url;\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n    };\r\n\r\nexport default authReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport s from './Header.module.scss'\r\nimport logo from './logo1.png';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport UserSmallPhoto from \"../common/UserSmallPhoto/UserSmallPhoto\";\r\n\r\nconst Header = (props) => {\r\n    if (!props.authUserProfile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt='scanface logo' className={s.header__logo}/>\r\n            <div className={s.profileInfoWrap}>\r\n                <UserSmallPhoto photo={props.authUserProfile.photos.small} styles={{circle: true, size: 'md'}}/>\r\n                {props.isAuth && <span className={s.profileFullName}><span\r\n                    className={s.profileFullNameTitle}>Welcome,</span><br/>{props.login}</span>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        authUserProfile: state.auth.authUserProfile,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(HeaderContainer);","import React from 'react';\r\nimport s from '../Navbar.module.scss';\r\nimport usersIcon from \"../../../assets/img/icons/nav/logout.svg\";\r\n\r\nconst Logout = (props) => {\r\n    return (\r\n\r\n            props.isAuth && <div className={s.logoutBlock}>\r\n                <a href='' onClick={props.logout}>\r\n                    <span style={{backgroundImage: `url(${usersIcon})`}} className={s.logoutBlock__icon}></span>\r\n                    <span>Log out</span>\r\n                </a>\r\n            </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Logout;","import React from 'react'\r\nimport {logout} from \"../../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Logout from \"./Logout\";\r\n\r\nclass LogoutContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Logout {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(LogoutContainer);","import React from 'react'\r\nimport s from './Navbar.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderContainer from \"../Header/HeaderContainer\";\r\nimport LogoutContainer from \"./Logout/LogoutContainer\";\r\n\r\nimport profileIcon from \"../../assets/img/icons/nav/profile.svg\"\r\nimport usersIcon from \"../../assets/img/icons/nav/group-profile-users.svg\"\r\nimport dialogsIcon from \"../../assets/img/icons/nav/chat.svg\"\r\nimport newsIcon from \"../../assets/img/icons/nav/newspaper.svg\"\r\nimport musicIcon from \"../../assets/img/icons/nav/music.svg\"\r\nimport settingsIcon from \"../../assets/img/icons/nav/settings.svg\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={`${s.navContainer} container`}>\r\n            <HeaderContainer/>\r\n\r\n            <div className={s.navWrapper}>\r\n                <div className={s.navTitle}>Account</div>\r\n                <nav className={s.nav}>\r\n                    <div className={`${s.nav__item}`}>\r\n                        <NavLink to={'/profile'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${profileIcon})`}} className={s.nav__itemIcon}></span>Profile\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={`${s.nav__item}`}>\r\n                        <NavLink to={'/users'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${usersIcon})`}} className={s.nav__itemIcon}></span>\r\n                            Users\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.nav__item}>\r\n                        <NavLink to={'/dialogs'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${dialogsIcon})`}} className={s.nav__itemIcon}></span>\r\n                            Messages\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.nav__item}>\r\n                        <NavLink to={'/news'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${newsIcon})`}} className={s.nav__itemIcon}></span>\r\n                            News\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.nav__item}>\r\n                        <NavLink to={'/music'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${musicIcon})`}} className={s.nav__itemIcon}></span>\r\n                            Music\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.nav__item}>\r\n                        <NavLink to={'/settings'} activeClassName={s.active}>\r\n                            <span style={{backgroundImage: `url(${settingsIcon})`}} className={s.nav__itemIcon}></span>\r\n                            Settings\r\n                        </NavLink>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            {/*<FriendsContainer/>*/}\r\n\r\n            <LogoutContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar","import React from 'react'\r\nimport s from './News.module.scss'\r\n\r\nconst News = () => {\r\n  return (\r\n      <div>\r\n\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default News;","import React from 'react'\r\nimport s from './Music.module.scss'\r\n\r\nconst Music = () => {\r\n  return (\r\n      <div>\r\n\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Music;","import React from 'react'\r\nimport s from './Settings.module.scss'\r\n\r\nconst Settings = () => {\r\n  return (\r\n      <div>\r\n\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    usersTotalCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    onFollowingUsersId: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {...state, usersTotalCount: action.totalCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state, onFollowingUsersId: action.isFetching ?\r\n                    [...state.onFollowingUsersId, action.userId]\r\n                    : state.onFollowingUsersId.filter(id => id !== action.userId)\r\n            };\r\n    }\r\n    return state\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setUsersTotalCount = (totalCount) => ({\r\n    type: SET_USERS_TOTAL_COUNT,\r\n    totalCount\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleIsFollowing = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING,\r\n    userId,\r\n    isFetching\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n\r\n\r\n    }\r\n};\r\n\r\nconst followUnfollowFLow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowing(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.deleteFriend.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.addFriend.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.scss'\r\nimport cn from 'classnames'\r\n\r\nlet Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.itemsTotalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionSize = props.portionSize || 10;\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={styles.paginationWrapper}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\r\n\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p} onClick={() => {\r\n                        props.onPageChanged(p)\r\n                    }} className={cn({\r\n                        [styles.selectedPage]: props.currentPage === p\r\n                    }, styles.paginator__pageItem)}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n        </div>\r\n\r\n    </>\r\n\r\n};\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport styles from './Users.module.scss'\r\nimport userPhoto from '../../assets/img/profile.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, onFollowingUsersId, follow, unfollow}) => {\r\n\r\n    return <>\r\n        <div className={styles.userWrapper}>\r\n            <div className={styles.userProfile}>\r\n                <div>\r\n                    <NavLink className={styles.profileImgLink} to={'profile/' + user.id}>\r\n                        <img className={styles.profileImg} alt={'profile image'}\r\n                             src={user.photos.small !== null ? user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={styles.userInfoWrapper}>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.userName}>{user.name}</div>\r\n                    <div className={styles.userStatus}>{user.status}</div>\r\n                    <div className={styles.userButtonWrapper}>\r\n                        {user.followed ?\r\n                            <button disabled={onFollowingUsersId.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>Unfollow</button> :\r\n                            <button disabled={onFollowingUsersId.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/*<div>{u.location.country}</div>\r\n                    <div>{u.location.city}</div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n};\r\n\r\nexport default User;","import React from 'react'\r\nimport styles from './Users.module.scss'\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({usersTotalCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\n    return <>\r\n        {props.isFetching ? <Preloader/> : ''}\r\n        <div className={styles.usersContainer}>\r\n            <Paginator itemsTotalCount={usersTotalCount} pageSize={pageSize} currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n            />\r\n\r\n            {props.users.map(u =>\r\n                <User key={u.id}\r\n                      user={u}\r\n                      onFollowingUsersId={props.onFollowingUsersId}\r\n                      follow={props.follow}\r\n                      unfollow={props.unfollow}\r\n                />\r\n            )}\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = state => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = state => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getUsersTotalCount = state => {\r\n    return state.usersPage.usersTotalCount;\r\n};\r\n\r\nexport const getCurrentPage = state => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = state => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getOnFollowingUsersId = state => {\r\n    return state.usersPage.onFollowingUsersId;\r\n};\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    requestUsers,\r\n    toggleIsFollowing\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getOnFollowingUsersId,\r\n    getPageSize,\r\n    getUsers,\r\n    getUsersTotalCount\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNum) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNum, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <Users usersTotalCount={this.props.usersTotalCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      isFetching={this.props.isFetching}\r\n                      onFollowingUsersId={this.props.onFollowingUsersId}\r\n                      toggleIsFollowing={this.props.toggleIsFollowing}\r\n                      unfollow={this.props.unfollow}\r\n                      follow={this.props.follow}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        usersTotalCount: getUsersTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        onFollowingUsersId: getOnFollowingUsersId(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        toggleIsFollowing,\r\n        requestUsers,\r\n        unfollow,\r\n        follow\r\n    }),\r\n)(UsersAPI);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/authReducer\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.scss\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field name={'email'} placeholder={'Email'} component={Input} validate={required}/>\r\n        </div>\r\n        <div>\r\n            <Field name={'password'} placeholder={'Password'} type=\"password\" component={Input} validate={required}/>\r\n        </div>\r\n        <div>\r\n            <Field name={'rememberMe'} type={'checkbox'} component={Input}/>remember me\r\n        </div>\r\n\r\n        {captchaUrl && <img src={captchaUrl}/>}\r\n        {captchaUrl && <Field name={'captcha'} component={Input} validate={required}/>}\r\n\r\n        {error && <div className={styles.summaryError}>\r\n            {\r\n                error\r\n            }\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    login, logout\r\n})(Login);\r\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Anna'},\r\n        {id: 2, name: 'Lusia'},\r\n        {id: 3, name: 'Sasha'}\r\n    ]\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    }\r\n\r\n    return state\r\n};\r\n\r\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer, {ADD_POST} from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer.plugin({\r\n        profileAddPostForm: (state, action) => {\r\n            switch (action.type) {\r\n                case ADD_POST:\r\n                    return undefined;\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n    })\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};","import React from 'react';\r\nimport './App.scss';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandedErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandedErrors)\r\n    }\r\n\r\n    catchAllUnhandedErrors = (e) => {\r\n        alert(\"Внимание: Необработанная ошибка Promise. Причина: \"\r\n            + e.reason);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        if (!this.props.isAuth) {\r\n            return <Login/>\r\n\r\n        }\r\n\r\n        return (\r\n            <div className='appWrapper'>\r\n                <Navbar/>\r\n                <div className='contentContainer'>\r\n                    <div className=\"postInfo\">\r\n                        <Switch>\r\n                            <Route exact render={() => <Redirect to={'/profile'}/>\r\n                            } path='/'/>\r\n\r\n                            <Route render={\r\n                                withSuspense(DialogsContainer)\r\n                            } path='/dialogs'/>\r\n\r\n                            <Route render={\r\n                                withSuspense(ProfileContainer)\r\n                            } path='/profile/:userId?'/>\r\n\r\n                            <Route render={() =>\r\n                                <UsersContainer/>\r\n                            } path='/users'/>\r\n\r\n                            {/*<Route render={() =>\r\n                        <Login/>\r\n                    } path='/login'/>*/}\r\n\r\n                            <Route render={() => <News/>} path='/news'/>\r\n                            <Route render={() => <Music/>} path='/music'/>\r\n                            <Route render={() => <Settings/>} path='/settings'/>\r\n\r\n                            <Route render={() => <div>404 not found</div>} path='*'/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        initializeApp\r\n    })\r\n)(App);\r\n\r\nconst SocialNetworkApp = () => {\r\n    //use BrowserRouter for hosting; if github page hosting - use HashRouter\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SocialNetworkApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SocialNetworkApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SocialNetworkApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import loadingImg from \"../../../assets/img/icons/loading.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = ()=>{\r\n    return <div>\r\n        <img src={loadingImg}/>\r\n    </div>\r\n };\r\n\r\n export default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__39k53\",\"header__logo\":\"Header_header__logo__1sMPv\",\"profileInfoWrap\":\"Header_profileInfoWrap__1B4y2\",\"profileFullName\":\"Header_profileFullName__2Nhqm\",\"profileFullNameTitle\":\"Header_profileFullNameTitle__3hRkr\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.scss\";\r\n\r\nconst Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <span className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\");\r\n\r\nexport const Input = Element(\"input\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3h7iE\",\"error\":\"FormsControls_error__N-njp\",\"summaryError\":\"FormsControls_summaryError__1OJ9I\"};","module.exports = __webpack_public_path__ + \"static/media/profile.4c03f727.png\";","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","import {getAuthUserData} from \"./authReducer\";\r\nimport {emojiApi} from \"../api/api\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst SET_EMOJI_BY_CATEGORY = 'SOC-NET/SET_EMOJI_BY_CATEGORY';\r\nconst SET_SUBCATEGORY_EMOJIS = 'SOC-NET/SET_SUBCATEGORY_EMOJIS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    emojisByCategory: [],\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        case SET_EMOJI_BY_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                emojisByCategory: [...state.emojisByCategory, ...action.emojisByCategory]\r\n            };\r\n        }\r\n        case SET_SUBCATEGORY_EMOJIS: {\r\n            return {\r\n                ...state,\r\n                emojisByCategory: state.emojisByCategory.map(category => {\r\n                    if (category['categorySlug'] === action.categorySlug) {\r\n                        return {...category, subcategoryEmojis: action.subcategoryEmojis}\r\n                    }\r\n                    return category\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    return state\r\n};\r\n\r\nexport const getSubcategoryEmojis = (categorySlug) =>\r\n    async (dispatch) => {\r\n        debugger\r\n        let response = await emojiApi.getSubcategoryEmojis(categorySlug);\r\n        if (response.data) {\r\n            let subcategoryEmojis = response.data;\r\n            dispatch(setSubcategoryEmojis(categorySlug, subcategoryEmojis))\r\n        } else {\r\n            if (typeof response.data === 'object' && response.status === 200) {\r\n                return Promise.reject('В этой категории ещё нет эмоджи')\r\n            }\r\n            return Promise.reject('Ошибка' + response.status)\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const initEmojisByCategory = () =>\r\n    async (dispatch) => {\r\n        let emojisCategory_response = await emojiApi.getEmojiCategory();\r\n        if (emojisCategory_response.data) {\r\n            let emojisByCategory = [];\r\n            for (const category of emojisCategory_response.data) {\r\n                let categoryObj = {};\r\n                categoryObj['categorySlug'] = category.slug;\r\n\r\n                emojisByCategory.push(categoryObj)\r\n\r\n            }\r\n\r\n            dispatch(setEmojisByCategory(emojisByCategory));\r\n        }\r\n\r\n    };\r\n\r\n\r\nexport const setEmojisByCategory = (emojisByCategory) => ({\r\n    type: SET_EMOJI_BY_CATEGORY,\r\n    emojisByCategory\r\n});\r\n\r\nexport const setSubcategoryEmojis = (categorySlug, subcategoryEmojis) => ({\r\n    type: SET_SUBCATEGORY_EMOJIS,\r\n    categorySlug,\r\n    subcategoryEmojis\r\n});\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise]).then(\r\n            () => {\r\n                dispatch(initializedSuccess())\r\n            }\r\n        )\r\n    };\r\n\r\n\r\nexport default appReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"UserSmallPhoto_circle__31XYO\",\"sm\":\"UserSmallPhoto_sm__2zT4a\",\"md\":\"UserSmallPhoto_md__1BrlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationWrapper\":\"Paginator_paginationWrapper__xJTwR\",\"selectedPage\":\"Paginator_selectedPage__Gxe3Y\",\"paginator__pageItem\":\"Paginator_paginator__pageItem__LK_8F\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport const ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PHOTO = 'SET_USER_PHOTO';\r\nconst TOGGLE_IS_UPDATE_PROFILE = 'TOGGLE_IS_UPDATE_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            user: {userName: 'Alena B'},\r\n            id: 1,\r\n            message: 'this site is under construction',\r\n            likesCount: '2',\r\n            date: new Date(2018, 6, 12, 11, 24, 32)\r\n        },\r\n        {\r\n            user: {userName: 'Andrey'},\r\n            id: 2,\r\n            message: 'looking for a job React developer',\r\n            likesCount: '3',\r\n            date: new Date(2018, 8, 23, 15, 20, 1)\r\n        }\r\n    ],\r\n    userProfile: null,\r\n    isUpdateProfile: false,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, action.post],\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, userProfile: action.userProfile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_USER_PHOTO: {\r\n            return {...state, userProfile: {...state.userProfile, photos: action.photos}}\r\n        }\r\n        case TOGGLE_IS_UPDATE_PROFILE: {\r\n            return {...state, isUpdateProfile: action.isUpdateProfile}\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const addPost = (post) =>\r\n    async (dispatch) => {\r\n        let responsePost = {...post};\r\n\r\n        let promise = await new Promise(resolve => setTimeout(function () {\r\n            resolve();\r\n        }, 3000));\r\n\r\n        (() => {\r\n            function randomInteger(min, max) {\r\n                let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n                return Math.round(rand);\r\n            }\r\n\r\n            responsePost.date = new Date();\r\n            responsePost.id = randomInteger(3, 50000);\r\n            responsePost.likesCount = 0;\r\n        })();\r\n\r\n        dispatch(addPostActionCreator(responsePost));\r\n        return promise;\r\n\r\n    };\r\n\r\nexport const addPostActionCreator = (post) => ({\r\n    type: ADD_POST,\r\n    post\r\n});\r\n\r\nexport const setUserProfile = (userProfile) => ({\r\n    type: SET_USER_PROFILE,\r\n    userProfile\r\n});\r\n\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SET_USER_PHOTO,\r\n    photos\r\n});\r\n\r\n\r\nexport const savePhoto = (file) =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n\r\n    }\r\n;\r\n\r\nexport const getUserProfile = (userId) =>\r\n    async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId);\r\n\r\n        dispatch(setUserProfile(response.data));\r\n\r\n    }\r\n;\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\n\r\nexport const toggleIsUpdateProfile = (isUpdateProfile) => ({\r\n    type: TOGGLE_IS_UPDATE_PROFILE,\r\n    isUpdateProfile\r\n});\r\n\r\nexport const getStatus = (userId) =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n\r\n    };\r\n\r\nexport const updateStatus = (status) =>\r\n    async (dispatch) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status);\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n\r\n    };\r\n\r\nexport const saveProfile = (profileData) =>\r\n    async (dispatch, getState) => {\r\n        dispatch(toggleIsUpdateProfile(true));\r\n\r\n        const userId = getState().auth.userId;\r\n        let response = await profileAPI.saveProfile(profileData);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId));\r\n            dispatch(toggleIsUpdateProfile(false));\r\n        } else {\r\n            dispatch(stopSubmit(\"profileInfoForm\", {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n\r\n    };\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}