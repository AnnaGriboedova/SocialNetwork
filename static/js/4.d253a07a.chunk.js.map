{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","MessageItem","props","className","s","message","src","smProfileIcon","message__profileImg","DialogItem","path","id","dialog","dialog__profileImg","profileImg","dialogInfo","to","name","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","messageInput","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","isAuth","heading","dialogsWrapper","dialogsList","messagesList","values","addMessage","newMessageText","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,eAAiB,gCAAgC,YAAc,6BAA6B,OAAS,wBAAwB,mBAAqB,oCAAoC,WAAa,8B,wGCY5QC,EATK,SAACC,GACnB,OACI,yBAAKC,UAAWC,IAAEC,SAChB,yBAAKC,IAAKC,IAAeJ,UAAS,UAAKC,IAAEI,oBAAP,oBACjCN,EAAMG,U,QCWAI,EAdI,SAACP,GAClB,IAAIQ,EAAO,YAAcR,EAAMS,GAC/B,OACI,yBAAKR,UAAWC,IAAEQ,QAChB,yBAAKT,UAAS,UAAKC,IAAES,mBAAP,kBAA2CP,IAAKQ,MAC9D,yBAAKX,UAAWC,IAAEW,YAChB,kBAAC,IAAD,CAASC,GAAIN,GACVR,EAAMe,S,0CCsCbC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAdL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,KAAWC,YAAa,qBAAsBX,KAAK,iBACnFd,UAAWC,IAAEyB,gBAExB,6BACI,6CAUDC,EA7CC,SAAC5B,GACb,IAAI6B,EAAkB7B,EAAM8B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAExB,GAAIM,KAAMkB,EAAElB,KAAMN,GAAIwB,EAAExB,QAEhG0B,EAAmBnC,EAAM8B,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAaH,IAAKG,EAAE5B,GAAIN,QAASkC,EAAElC,aAM9F,OAAKH,EAAMsC,OAGP,yBAAKrC,UAAS,UAAKC,IAAE6B,QAAP,eACV,wBAAI9B,UAAWC,IAAEqC,SAAjB,WACA,yBAAKtC,UAAWC,IAAEsC,gBACd,yBAAKvC,UAAWC,IAAEuC,aACbZ,GAEL,yBAAK5B,UAAWC,IAAEwC,cACd,6BAAMP,GACN,kBAACnB,EAAD,CAAqBG,SAff,SAACwB,GACnB3C,EAAM4C,WAAWD,EAAOE,sBAGF,kBAAC,IAAD,CAAU/B,GAAI,Y,wCCdxCgC,EAA6B,SAACC,GAC9B,MAAO,CACHT,OAAQS,EAAMC,KAAKV,S,OCcZW,sBACXC,aAdkB,SAACH,GACnB,MAAO,CACHjB,YAAaiB,EAAMjB,gBAGF,SAACqB,GACtB,MAAO,CACHP,WAAY,SAACC,GACTM,EAASC,YAAwBP,UDNb,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKvD,MAAMsC,OACT,kBAACe,EAAcE,KAAKvD,OADI,kBAAC,IAAD,CAAUc,GAAI,eAHV,GACX0C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCG9DL,CAGbrB","file":"static/js/4.d253a07a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2eWwQ\",\"heading\":\"Dialogs_heading__1joHW\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__1EMy-\",\"dialogsList\":\"Dialogs_dialogsList__3wQ7-\",\"dialog\":\"Dialogs_dialog__1bZRD\",\"dialog__profileImg\":\"Dialogs_dialog__profileImg__3zrKp\",\"dialogInfo\":\"Dialogs_dialogInfo__1HkZr\"};","import React from 'react'\r\nimport s from './../Dialogs.module.scss'\r\nimport smProfileIcon from './../../../assets/img/profile.png'\r\n\r\nconst MessageItem = (props) => {\r\n  return (\r\n      <div className={s.message}>\r\n        <img src={smProfileIcon} className={`${s.message__profileImg} smProfileIcon`} />\r\n        {props.message}\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default MessageItem;","import React from 'react'\r\nimport s from './../Dialogs.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profileImg from './../../../assets/img/profile.png'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n      <div className={s.dialog}>\r\n        <img className={`${s.dialog__profileImg} smProfileIcon`} src={profileImg}></img>\r\n        <div className={s.dialogInfo}>\r\n          <NavLink to={path}>\r\n            {props.name}\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './Dialogs.module.scss'\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements = props.dialogsPage.messages.map(m => <MessageItem key={m.id} message={m.message}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={`${s.dialogs} container`}>\r\n            <h3 className={s.heading}>Dialogs</h3>\r\n            <div className={s.dialogsWrapper}>\r\n                <div className={s.dialogsList}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messagesList}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required]} placeholder={'Enter your message'} name='newMessageText'\r\n                       className={s.messageInput}/>\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react'\r\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}